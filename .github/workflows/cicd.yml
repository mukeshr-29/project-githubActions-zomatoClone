name: build, scan, package
on: 
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: [zomato]
    steps:
      - name: checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: install dependencies
        run: sudo apt install nodejs -y

      - name: file system scanning
        run: trivy fs --format table -o trivy-fs-report.html .

      - name: analyzing code using sonarqube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # - name: SonarQube Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   # Force to fail step after specific time.
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: docker build and tag
        run: |
          docker build -t mukeshr29/zomato-clone .

      - name: docker img scanning
        run: trivy image --format table -o trivy-img-report.html mukeshr29/zomato-clone

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: docker img push 
        run: docker push mukeshr29/zomato-clone

  deploy:
    name: deploy app in eks
    needs: build
    runs-on: [zomato]
    steps:
      - name: scan img before deploy
        run: trivy image --format table -o trivy-img-report.html mukeshr29/zomato-clone

      - name: deployment via eks
        uses: actions-hub/kubectl@master
        env:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
      - run: |
          kubectl create ns zomatoapp
          kubctl apply -f deployment.yml -f service.yml -n zomatoapp
          kubectl get svc -n zomatoapp
      

